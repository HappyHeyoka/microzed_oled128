Some code to adapt the Freetronics OLED128 display and Arduino library to run on a MicroZed
attached to an IO Carrier Card (IOCC)

First note that only the SDK project is supplied.  Getting a Vivado project into Git is beyond me right now.
There's a bit image for the FPGA, and schematics and Verilog HDL files for getting Vivado up and running.  

The programmable logic (PL) configuration consists of:
 - an AXI GPIO output port (with the inputs looped back to the outputs for read/modify/write)
 - routing for built-in SPI via the EMIO to pins on one of the IOCC PMOD connecters.

One of the built-in SPI peripherals is used to communicate with the OLED128.
The SPI hardware takes care of the chip-select.
Other handshaking (the RST and DC signal) are done via the GPIO.

/////////////////////////////////////////////////////////////////////////////////////////////
////	Here's the hardware pin definitions for PMOD connector JB on MicroZed IO Carrier Card
/////////////////////////////////////////////////////////////////////////////////////////////

////    Y16 --> JB1_DC
////    Y17 --> JB2_MISO
////    W14 --> JB3_MOSI
////    Y14 --> JB4_SCK
////    T16 --> JB7_RST
////    U17 --> JB8_OLED_CS
////    V15 --> JB9_SD_CS
////    W15 --> JB10_SD_CD
////
////	AXI GPIO port assignments
////	assign oled_dnc = gpio_oled_control[0];
////	assign oled_rst = gpio_oled_control[1];

See the the two schematic diagrams in this folder for the general layout...

Notes On Examples
=================
Things are complicated by fact that Arduino 'Print' classs isn't supported,
you could lift it from Arduino code or convert stuff to use stdlib or iostreams.

Also, no filesystem stuff is ported.  So SD based BMPs aren't readable.  You could convert
them to datastructures using the bin2header.py code.

font example	-	works ok
sprite example	-	works ok - only uses memory based BMP
loremipsum example	-	broken
stripchart example	-	broken
flames example		-	no SD file support


Notes On Copyright
==================
Consider the MicroZed example stuff as GPL, same as the Freetronics library.
BUT keep in mind that all the Board Support Package stuff is essentially generated by Xilinx and claimed by them.
